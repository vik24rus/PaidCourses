0)страница авторизации(студент, ответственный человек)/регистрация(студента)
Админ вид:
1) главная страница с сылками на:
2) редактировать преподавателей
	-удалить
	-добавить
	-отредактировать  (First, Last , Patronymic)
3) редактирование департаментов
	-удалить
	-добавить
	-отредактировать (Name)
4)список курсов
	-удалить
	-добавить
	-отредактировать (Name , starttime.finishtime,costcourse,newbie)
	-назначить преподавателя (add teacher )
	-убрать преподавателя (del teacher)
	-отредактировать в курсе требования к предыдущим курсам

5)Студент
  	-удалить
  	-добавить
  	-отредактировать  (First, Last , Patronymic,mainstudygroup , login, pass)
6)Запись студента на курс
    -добавление студента в очередь с последующей "ручной" проверкой и автоматиеская проверка на пройденные курсы до этого
7)Упраление группами
    -удалить группу или студента из группы
    !!!добавить студента в группу жестко
    -отредактировать (Name,Year,к какому курсу относится)
0:1) управление учетными записями администраторов
     -удалить
     -добавить
     -отредактировать

Студент вид:
0:1) смена пароля
0:2) запись на курс - отправка заявки
0:3) просмотр всех курсов
0:4) просмотр курсы на которые он записан

Алгоритм работы:
1) отредактировали преподавателей
2) отредактировали департаменты
3) создали курсы
4) создали отношения между курсами
подготовительные этапы закончены.
1) первоначально студента регистрирует в системе ответственный человек или (после введения алгоритма авторизации) студент регистрируется в программе сам
2) ответственный человек кидает студента в очередь одобрения и система проверяет-формирует группы или (....)
3) при необходимости железно добавляют пользователя в группу
4) при необходимости удаляют человека из группы

проверка студента(перемещение из очереди в группу)
1) проверка предварительно того что студент прошел предварительно другие курсы (были записи с id жтого студента в таблице PaidGroups)
2) проверка числа студентов в группе